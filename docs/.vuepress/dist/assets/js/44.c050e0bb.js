(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{423:function(e,n,a){"use strict";a.r(n);var s=a(17),t=Object(s.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm i babel-preset-es2015 -D\nnpm install -D babel-loader @babel/core @babel/preset-env\nnpm install -D @babel/plugin-transform-runtime\nnpm install @babel/runtime\n\nnpm install --save-dev typescript ts-loader\nnpm install sass-loader sass  --save-dev\n\n")])])]),a("h2",{attrs:{id:"使用-babel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-babel"}},[e._v("#")]),e._v(" 使用 babel")]),e._v(" "),a("p",[a("code",[e._v("babel")]),e._v(" 是一个 js 的编译器，解决两个问题，")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "plugins": [ // 使用哪些插件 插件可以控制如何转换代码\n    [\n      "transform-runtime", // npm i babel-runtime babel-plugin-transform-runtime -D\n      {\n        "polyfill": false\n      }\n    ]\n  ],\n  "presets": [ // 被转换的使用什么语法,一组plugins 集合，一个plugin完成一个语法转换工作\n    [\n      "es2015", // 2015的新特性\n      {\n        "modules": false\n      }\n    ],\n    "stage-2", // 被社区提出\n    "react"\n  ]\n}\n\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' {\n        // 命中 JavaScript 文件\n        // test: /\\.js$/,\n        test: /\\.m?js$/,\n        // 用 babel-loader 转换 JavaScript 文件\n        // ?cacheDirectory 表示传给 babel-loader 的参数，用于缓存 babel 编译结果加快重新编译速度\n        // use: ["babel-loader?cacheDirectory"],\n        exclude: /(node_modules|bower_components)/,\n        use: [\n          {\n            loader: "babel-loader",\n            options: {\n              cacheDirectory: true, // 默认是false\n              presets: ["@babel/preset-env"],\n              plugins: [\'@babel/plugin-transform-runtime\']\n            },\n            // // enforce:\'post\' 的含义是把该 Loader 的执行顺序放到最后\n            // // enforce 的值还可以是 pre，代表把 Loader 的执行顺序放到最前面\n            // enforce: "post",\n          },\n        ],\n        // 只命中src目录里的js文件，加快 Webpack 搜索速度\n        include: path.resolve(__dirname, "src"),\n      },\n')])])]),a("h2",{attrs:{id:"使用ts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用ts"}},[e._v("#")]),e._v(" 使用"),a("code",[e._v("ts")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n    "compilerOptions": {\n      "outDir": "./dist/",\n      "noImplicitAny": true,\n      "module": "es6", // 编译出的代码采用的模块规范\n      "target": "es5", // 编译出的代码采用 ES 的哪个版本\n      "jsx": "react",\n      "allowJs": true\n    }\n  }\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" {\n        test: /\\.tsx?$/,\n        use: 'ts-loader',\n        exclude: /node_modules/,\n      },\n")])])]),a("p",[e._v("上述的操作我们都是需要新建一个 "),a("code",[e._v(".html")]),e._v(" 文件来加载 打包后的 js 文件，但通常情况下我们的 html 文件是没有这么简单的，而是有一些其他的配置，接着往下看吧")])])}),[],!1,null,null,null);n.default=t.exports}}]);